#include <FastLED.h>

// How many leds in your strip?
#define NUM_LEDS 31

// For led chips like Neopixels, which have a data line, ground, and power, you just
// need to define DATA_PIN.  For led chipsets that are SPI based (four wires - data, clock,
// ground, and power), like the LPD8806 define both DATA_PIN and CLOCK_PIN
#define DATA_PIN 5
#define CLOCK_PIN 13

int inPin = 7; 
int icpt = 1; 
int val = 0;  

int delaySeq = 100;

// Define the array of leds
CRGB leds[NUM_LEDS];

void setup() { 
    //FastLED.addLeds<WS2812, DATA_PIN, RGB>(leds, NUM_LEDS);
    Serial.begin(9600);  
    pinMode(inPin, INPUT);  
    //FastLED.addLeds<WS2812B, DATA_PIN>(leds, NUM_LEDS);
     FastLED.addLeds<NEOPIXEL, DATA_PIN>(leds, NUM_LEDS);
 }

 void blinkLed () 
{
      for (int i=0; i <= 2; i++){
        for(int dot = 0; dot < NUM_LEDS; dot++) { 
            leds[dot] = CRGB::Black;
            
        }
        FastLED.show();
        delay(1000);
        for(int dot = 0; dot < NUM_LEDS; dot++) { 
           if (dot % 2) {
              leds[dot] = CRGB::Red;
            }else {
              leds[dot] = CRGB::Yellow;
            }
         }
         FastLED.show();
          delay(1000);
      }
 }

void switchOff () 
{
      for(int dot = 0; dot < NUM_LEDS; dot++) { 
          leds[dot] = CRGB::Black;
           
       }
       FastLED.show();
      
}


void loop() {
   val = digitalRead(inPin); 
 
   
  
    if (val == HIGH) {
        Serial.println("do thing"); 
        delaySeq = 100;
   
        if (icpt == 1) { 
            switchOff();
            Serial.println("start LED sequence");
          for(int dot = 0; dot < NUM_LEDS; dot++) { 
            Serial.println("start LED sequence 1");
            if (dot % 2) {
              leds[dot] = CRGB::Red;
            }else {
              leds[dot] = CRGB::Yellow;
            }
            FastLED.show();
            // clear this led for the next time around the loop
            //leds[dot] = CRGB::Black;
            delay(50);
           
          }
           switchOff();
           for(int dot = 0; dot < NUM_LEDS; dot++) { 
            Serial.println("start LED sequence 2");
            if (dot % 2) {
              leds[dot] = CRGB::Red;
            }else {
              leds[dot] = CRGB::Yellow;
            }
            FastLED.show();
            // clear this led for the next time around the loop
            //leds[dot] = CRGB::Black;
            delay(35);
           
          }
           switchOff();
           for(int dot = 0; dot < NUM_LEDS; dot++) { 
            Serial.println("start LED sequence 3");
            if (dot % 2) {
              leds[dot] = CRGB::Red;
            }else {
              leds[dot] = CRGB::Yellow;
            }
            FastLED.show();
            // clear this led for the next time around the loop
            //leds[dot] = CRGB::Black;
            delay(25);
           
          }
           switchOff();
           for(int dot = 0; dot < NUM_LEDS; dot++) { 
              Serial.println("start LED sequence 4");
            if (dot % 2) {
              leds[dot] = CRGB::Red;
            }else {
              leds[dot] = CRGB::Yellow;
            }
            FastLED.show();
            // clear this led for the next time around the loop
            //leds[dot] = CRGB::Black;
            delay(10);
           
          }
            //blinkLed();
        }else {
          switchOff();
        }
        icpt++;
         Serial.println(icpt);
       
      
    }else {
     Serial.println("do nothing"); 
     icpt = 1; 
     switchOff();
    }
    delay(50);
}

